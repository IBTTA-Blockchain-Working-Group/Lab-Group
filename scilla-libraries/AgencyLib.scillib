scilla_version 0

import BoolUtils

library AgencyLib
 (**
 Library design based on the Tolling and Customer Service
 Working Group's ICD document.
 Some of the business rules that are documented in NIOP are listed here with the intent 
 to present a smart-contract alternative to handle the requirements.
 *)


type Agency =  | Agency of String
type VINNumber = | VINNumber of String
type LPState = | LPState of String
type LPCounty = | LPCount of String
type TollOperator = | TollOperator of String
type AccountManagement = | MobileApp | TransponderDistributor | TransponderRetail
type AccountTool = | Smartphone | CustomerServiceCenter | MobileAppTool
type AccountIdentifier = | VehicleLicensePlate | TransponderIdentifier
type InitialTerm = | InitialTerm of Uint32
type RenewTerm = | RenewTerm of Uint32
type ContractorCompensation = | ContractorCompensation of Uint32

(** Exhibit B : Costs - not to exceed the costs listed *)

type ProductCost = | ProductCost of Uint64
type PreLoadedTolls = | PreLoadedTolls of Uint64
type TransponderCost = | TransponderCost of Uint64
type AppDownloadCost = | AppDownloadCost of Uint64
type ReloadFees = | ReloadFees of Uint64

type AgencyError = 
  | NotHomeAgency of String
  | AwayAgencyCannotAuthorizeFee of String

type SystemError =
  | GeneralError of Uint64 String
  | InvalidData of Uint64 String
  | UnknownPlaza of Uint64 String
  | UnknownLane of Uint64 String
  | MissingRequiredField of Uint64 String
  | TagNotFound of Uint64 String 
  | DuplicateTransaction of Uint64 String
  | FormatError of Uint64 String
  | TagValidationOutOfDate of Uint64 String
  | TransactionOutOfDate of Uint64 String
  | InvalidFromAgency of Agency
  | InvalidVINNumber of VINNumber
  | InvalidAccountInfo of String
  | InvalidState of String
  | InvalidStatus of String
  | InvalidDiscountPlan

(* Some of these types are borrowed from the IAG specification document.*)

type DiscountCode = 
  | StatenIslandDiscountCode
  | GreenDiscountCode
  | CarpoolDiscountCode
  | NonRevenueDiscountCode
  | AnnualPermitDiscountCode
  | TappanZeeCommuterDiscountCode
  | TappanZeeCarpoolDiscountCode
  | RockawayResidentDiscountCode
  | StatenIslandResidentDiscountCode (* should be derivable from the tag*)
  | DRPADiscountCode
  | SJTADiscountCode
  | BusDiscountCode

type TagStatus =
  | ValidTagStatus
  | LowBalance
  | InvalidTagStatus
  | LostOrStolenTagStatus

type TagProtocol = 
  | TDM
  | SeGo
  | Protocol_6C
  | TDM_SEGO
  | TDM_6C
  | Sego_C6
  | TDMSEGO6C

type TagMount = 
  | Interior
  | LicensePlateMount
  | RoofMount
  | Headlamp
  | VehicleIntegrated (* connected devices*)

type TransponderType = 
  | Switchable
  | LicensePlate
  | Feedback
  | FeedbackSwitchable

type LaneMode =
  | ETCOnly
  | ETCACM
  | PersonnedETC
  | PersonnedETCCarpool
  | PersonnedETCCarpoolWithConfirmation (* confirmation needs to be a transition *)


(* A potential either representation, we will notice some duplication of types here, as opposed to a generic 
solution based on Either. As we can see that the types will explode if we try to define them by hand. 
In the absence of Either, option type, that is a built-in type in Scilla is a better alternative.
*)

(* A proposed alternative to handling errors.
type Either = 
  | EitherA of AgencyError LaneMode
  | EitherB of AgencyError TransponderType

*)


(* Some constants *)
let panynj : Agency = let str = "PANYNJ" in Agency str
let nysba : Agency = let str = "NYSBA" in Agency str
let nysta : Agency = let str = "NYSTA" in Agency str
let nysta : Agency = let str = "MTA" in Agency str
let nysta : Agency = let str = "DRPA" in Agency str
let nysta : Agency = let str = "SJTA" in Agency str
let nysta : Agency = let str = "NJHA" in Agency str
